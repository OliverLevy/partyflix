{"version":3,"sources":["assets/icons/Icon-play.svg","assets/icons/Icon-info.svg","assets/images/1.jpg","assets/images/2.jpg","assets/images/3.jpg","assets/images/4.jpg","assets/images/5.jpg","assets/icons/Icon-pause.svg","assets/icons/Icon-scrubber-control.svg","assets/icons/Icon-back-arrow.svg","assets/logo/asset-1.svg","assets/icons/chevron-down.svg","components/Gallery.jsx","components/videoPlayer/VideoPlayer.jsx","components/Info.jsx","components/navbar/Navbar.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Gallery","list","this","props","results","genreList","genres","length","className","map","item","movieGenre","genre_ids","genreId","filter","genreItem","id","genreOutput","key","name","src","backdrop_path","alt","title","release_date","to","infobtn","playbtn","React","Component","VideoPlayer","movieGallery","currentVideoId","match","params","output","vid","console","log","image1","image2","image3","image4","image5","play","pause","scrubber","type","placeholder","Info","undefined","pageId","movie","allGenres","movieGenres","genre","backbtn","overview","vote_average","vote_count","Navbar","image","chevron","App","state","axios","get","then","suc","setState","data","catch","err","error","path","render","routerProps","exact","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.862e68f5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Icon-play.a3c51b76.svg\";","module.exports = __webpack_public_path__ + \"static/media/Icon-info.704cfdd2.svg\";","module.exports = __webpack_public_path__ + \"static/media/1.09aa2a4f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.333d1a36.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.6ca85f05.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.d8ca72fc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/5.054fb361.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Icon-pause.bc610208.svg\";","module.exports = __webpack_public_path__ + \"static/media/Icon-scrubber-control.0f11a227.svg\";","module.exports = __webpack_public_path__ + \"static/media/Icon-back-arrow.6b4b7d36.svg\";","module.exports = __webpack_public_path__ + \"static/media/asset-1.dd16ceb3.svg\";","module.exports = __webpack_public_path__ + \"static/media/chevron-down.63f47aaa.svg\";","import React from \"react\";\nimport \"./Gallery.scss\";\nimport { Link } from \"react-router-dom\";\nimport playbtn from \"../assets/icons/Icon-play.svg\";\nimport infobtn from \"../assets/icons/Icon-info.svg\";\n\nconst posterSmall = \"http://image.tmdb.org/t/p/w300\";\nconst posterLarge = \"http://image.tmdb.org/t/p/original\";\n\nexport default class Gallery extends React.Component {\n  render() {\n    const list = this.props.list.results;\n    const genreList = this.props.genres;\n    if (this.props.list.length === 0 && this.props.genres.length === 0) {\n      return <h3>loading</h3>;\n    } else {\n      return (\n        <div>\n          <h2>Pick a movie!</h2>\n\n          <div className=\"gallery\">\n            {list.map((item) => {\n              // console.log(\"genre list\", genreList)\n              const currentMovieGenres = item.genre_ids;\n              // console.log(\"current movie genre\", currentMovieGenres)\n              const movieGenre = currentMovieGenres.map((genreId) => {\n                let output = genreList.filter(\n                  (genreItem) => genreItem.id === genreId\n                );\n\n                return output;\n              });\n\n              if (movieGenre[0].length !== 0) {\n                let genreOutput = movieGenre.map((item) => {\n                  return (\n                    <p className=\"gallery__item-genres\" key={item[0].id}>\n                      {item[0].name}\n                    </p>\n                  );\n                });\n                \n\n                return (\n                  <div key={item.id} className=\"gallery__item\">\n                    <div className=\"gallery__item-link\">\n                      <img\n                        className=\"gallery__item-img\"\n                        src={`${posterSmall}${item.backdrop_path}`}\n                        alt={item.title}\n                      />\n\n                      <div className=\"gallery__item-info\">\n                        <div className=\"gallery__info-container\">\n                          <h2 className=\"gallery__item-title\">{item.title}</h2>\n                          <div className=\"gallery__item-release-date\">\n                            <h5>Realease Date</h5>\n                            <p>{item.release_date}</p>\n                          </div>\n\n                          <div className=\"gallery__item-genres-container\">\n                            {genreOutput}\n                          </div>\n                        </div>\n\n                        <div className=\"gallery__item-functions\">\n                          <Link\n                            to={`/info/${item.id}`}\n                            className=\"gallery__btn\"\n                          >\n                            <img src={infobtn} alt=\"more info\" />\n                            <h4>LEARN MORE</h4>\n                          </Link>\n                          <Link\n                            to={`/player/${item.id}`}\n                            className=\"gallery__btn\"\n                          >\n                            <img src={playbtn} alt=\"watch now button\" />\n                            <h4>WATCH NOW</h4>\n                          </Link>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              }\n            })}\n          </div>\n        </div>\n      );\n    }\n  }\n}\n","import React from 'react';\nimport './videoplayer.scss';\nimport image1 from \"../../assets/images/1.jpg\"\nimport image2 from \"../../assets/images/2.jpg\"\nimport image3 from \"../../assets/images/3.jpg\"\nimport image4 from \"../../assets/images/4.jpg\"\nimport image5 from \"../../assets/images/5.jpg\"\nimport play from \"../../assets/icons/Icon-play.svg\"\nimport pause from \"../../assets/icons/Icon-pause.svg\"\nimport scrubber from \"../../assets/icons/Icon-scrubber-control.svg\"\n\n\n\nconst posterLarge = 'http://image.tmdb.org/t/p/original'\n\nexport default class VideoPlayer extends React.Component {\n\n\n  render() {\n    const list = this.props.movieGallery;\n    if (list.length === 0) {\n      return <h2>loading...</h2>;\n    } else {\n      const currentVideoId = this.props.match.params.id;\n      const videoList = list.results;\n      const output = videoList.filter((item) => item.id == currentVideoId);\n      const vid =output[0]\n      console.log(output);\n      return (\n        <div className=\"player\">\n          <h1 className=\"player__header\">{vid.title}</h1>\n        <div className=\"player__container1\">\n          <div className=\"player__video\">\n          <img className=\"player__video--poster\"src={posterLarge + vid.backdrop_path} alt=\"\"/>\n          </div>\n          <div className=\"player__viewers\">\n            <img className=\"player__viewers--image\" src={image1} alt=\"\"/>\n            <img className=\"player__viewers--image\" src={image2} alt=\"\"/>\n            <img className=\"player__viewers--image\" src={image3} alt=\"\"/>\n            <img className=\"player__viewers--image\" src={image4} alt=\"\"/>\n            <img className=\"player__viewers--image\" src={image5} alt=\"\"/>\n          </div>\n        </div>\n        <div className=\"player__container2\">\n          <div className=\"player__controls\">\n          <img className=\"player__controls--img\" src={play} alt=\"\"/>\n          <img className=\"player__controls--img\" src={pause} alt=\"\"/>\n          <img className=\"player__controls--img\" src={scrubber} alt=\"\"/>\n\n          </div>\n          <div className=\"player__chat\">\n              <h2 className=\"play__chat--header\" >Chat Now</h2>\n              <p className=\"play__chat--content\"><span>Jon:</span> Wow this movie is amazing! I am glad I can watch it with my best friends!</p>\n              <p className=\"play__chat--content\"><span>Lauren:</span> My favourite scene is coming up!</p>\n              <p className=\"play__chat--content\"><span>Lesley:</span> This movie has an amazing soundtrack</p>\n              <p className=\"play__chat--content\"><span>Eula:</span> @Lesley shouldn't we be marking assignments right now?</p>\n              <form className=\"form\">\n              <input className=\"form__input\" type=\"text\" placeholder=\"write comment here\"/>\n              <button className=\"form__button\">Submit</button>\n              </form>\n          </div>\n        </div>\n      </div>\n      );\n    }\n  }\n}\n","import React from \"react\";\nimport \"./Info.scss\";\nimport { Link } from \"react-router-dom\";\nimport playbtn from \"../assets/icons/Icon-play.svg\";\nimport infobtn from \"../assets/icons/Icon-info.svg\";\nimport backbtn from \"../assets/icons/Icon-back-arrow.svg\";\n\nconst posterLarge = \"http://image.tmdb.org/t/p/original\";\n\nexport default function Info(props) {\n  if (props.movieGallery.results === undefined || props.genres.length === 0) {\n    return <h3>loading...</h3>;\n  } else {\n    console.log(props.genres);\n    const pageId = props.match.params.id;\n    const list = props.movieGallery.results;\n    const output = list.filter((item) => item.id == pageId);\n    const movie = output[0];\n    console.log(movie);\n    const allGenres = props.genres;\n    const currentGenres = movie.genre_ids;\n\n    const movieGenres = currentGenres.map((item) => {\n      let output = allGenres.filter((genre) => genre.id === item);\n      return (\n        <p key={output[0].id} className=\"info__genres\">\n          {output[0].name}\n        </p>\n      );\n    });\n\n    console.log(movieGenres);\n    return (\n      <div>\n        <Link to=\"/\" className='info__link'>\n          <img src={backbtn} alt=\"\" />\n          <h1 className=\"info__title\">{movie.title}</h1>\n        </Link>\n        <div className=\"info\">\n          <div className=\"info__text\">\n          <h4>Genres</h4>\n            <div className=\"info__genres-container\">\n              \n              {movieGenres}\n            </div>\n            <h4>Overview</h4>\n            <div className=\"info__overview\">\n              \n              <p>{movie.overview}</p>\n            </div>\n            <div className=\"info__release-date-container\">\n              <h4 className=\"info__release-date-header\">Release Date</h4>\n              <p className=\"info__release-date\">{movie.release_date}</p>\n            </div>\n            <h4>Ratings</h4>\n            <div className='info__ratings'>\n            <p>{movie.vote_average}/10</p>\n            <p>{movie.vote_count} people reviewed this</p>\n            </div>\n            <div className=\"gallery__btn\">\n              <h4>ADD TO WATCHLIST</h4>\n            </div>\n          </div>\n          <div className=\"info__img-container\">\n            <img\n              className=\"info__img\"\n              src={`${posterLarge}${movie.backdrop_path}`}\n              alt=\"movie poster\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './navbar.scss';\nimport {\n    Link,\n  } from \"react-router-dom\";\nimport image from '../../assets/logo/asset-1.svg';\nimport chevron from '../../assets/icons/chevron-down.svg';\n\nexport default function Navbar() {\n    return (\n        <div className=\"navbar\">\n            <div className=\"navbar__container1\">\n        <img className=\"navbar__logo\" src={image} alt=\"\"/>\n        </div>\n        <div className=\"navbar__container3\">\n            <h1 className=\"navbar__slogan\">Watch Together</h1>\n            <img className=\"navbar__chevron\" src={chevron} alt=\"\"/>\n        </div>\n        <div className=\"navbar__container2\">\n        <Link className=\"navbar__link\" to=\"/\">Home</Link>\n        <Link className=\"navbar__link\" to=\"/about\">About</Link>\n        </div>\n        </div>\n    )\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Link,\n  BrowserRouter,\n} from \"react-router-dom\";\nimport Gallery from \"./components/Gallery\";\nimport VideoPlayer from \"./components/videoPlayer/VideoPlayer\";\n\nimport Info from \"./components/Info\";\nimport axios from \"axios\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport \"./App.scss\";\n\n// use this doc set as refference https://developers.themoviedb.org/3/movies/get-movie-credits\n\nconst url = \"https://api.themoviedb.org/3\";\nconst api_key = \"?api_key=24b5809ca6dc4a670e6e033f96229227\";\nconst topRated = \"/movie/top_rated\";\nconst popular = \"/movie/popular\";\nconst latest = \"/movie/latest\";\nconst posterSmall = \"http://image.tmdb.org/t/p/w300\";\nconst posterLarge = \"http://image.tmdb.org/t/p/original\";\n\nclass App extends React.Component {\n  state = {\n    movieGallery: [],\n    genres: [],\n  };\n\n  componentDidMount() {\n    axios\n      .get(`${url}${popular}${api_key}`)\n      .then((suc) => {\n        this.setState({\n          movieGallery: suc.data,\n        });\n      })\n      .catch((err) => console.error(err));\n\n    axios\n      .get(\n        \"https://api.themoviedb.org/3/genre/movie/list?api_key=24b5809ca6dc4a670e6e033f96229227&language=en-US\"\n      )\n      .then((suc) => {\n        this.setState({ genres: suc.data.genres });\n      })\n      .catch((err) => console.error(err));\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <Navbar />\n        <div className=\"main\">\n          <Switch>\n            <Route\n              path=\"/player/:id\"\n              render={(routerProps) => (\n                <VideoPlayer\n                  movieGallery={this.state.movieGallery}\n                  {...routerProps}\n                />\n              )}\n            />\n\n            <Route path=\"/\" exact>\n              <Gallery\n                list={this.state.movieGallery}\n                genres={this.state.genres}\n              />\n            </Route>\n            <Route path=\"/info/:id\" render={(routerProps) => (\n              <Info movieGallery={this.state.movieGallery} genres={this.state.genres} {...routerProps}/>\n            )}>\n              \n            </Route>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}