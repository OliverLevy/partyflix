{"ast":null,"code":"var _jsxFileName = \"/Users/oliverlevy/projects/partyflix/src/App.jsx\";\nimport React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Gallery from \"./components/Gallery\";\nimport VideoPlayer from \"./components/videoPlayer/VideoPlayer\";\nimport Info from \"./components/Info\";\nimport axios from \"axios\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport \"./App.scss\"; // use this doc set as refference https://developers.themoviedb.org/3/movies/get-movie-credits\n\nconst url = \"https://api.themoviedb.org/3\";\nconst api_key = \"?api_key=24b5809ca6dc4a670e6e033f96229227\";\nconst popular = \"/movie/popular\";\nconst posterSmall = \"http://image.tmdb.org/t/p/w300\";\nconst posterLarge = \"http://image.tmdb.org/t/p/original\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movieGallery: [],\n      genres: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`${url}${popular}${api_key}`).then(suc => {\n      this.setState({\n        movieGallery: suc.data\n      });\n    }).catch(err => console.error(err));\n    axios.get(\"https://api.themoviedb.org/3/genre/movie/list?api_key=24b5809ca6dc4a670e6e033f96229227&language=en-US\").then(suc => {\n      this.setState({\n        genres: suc.data.genres\n      });\n    }).catch(err => console.error(err));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(BrowserRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/player/:id\",\n      render: routerProps => /*#__PURE__*/React.createElement(VideoPlayer, Object.assign({\n        movieGallery: this.state.movieGallery\n      }, routerProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Gallery, {\n      list: this.state.movieGallery,\n      genres: this.state.genres,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/info/:id\",\n      render: routerProps => /*#__PURE__*/React.createElement(Info, Object.assign({\n        movieGallery: this.state.movieGallery,\n        genres: this.state.genres\n      }, routerProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/oliverlevy/projects/partyflix/src/App.jsx"],"names":["React","BrowserRouter","Route","Switch","Gallery","VideoPlayer","Info","axios","Navbar","url","api_key","popular","posterSmall","posterLarge","App","Component","state","movieGallery","genres","componentDidMount","get","then","suc","setState","data","catch","err","console","error","render","routerProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  BrowserRouter,\n  Route,\n  Switch\n} from \"react-router-dom\";\nimport Gallery from \"./components/Gallery\";\nimport VideoPlayer from \"./components/videoPlayer/VideoPlayer\";\n\nimport Info from \"./components/Info\";\nimport axios from \"axios\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport \"./App.scss\";\n\n// use this doc set as refference https://developers.themoviedb.org/3/movies/get-movie-credits\n\nconst url = \"https://api.themoviedb.org/3\";\nconst api_key = \"?api_key=24b5809ca6dc4a670e6e033f96229227\";\nconst popular = \"/movie/popular\";\nconst posterSmall = \"http://image.tmdb.org/t/p/w300\";\nconst posterLarge = \"http://image.tmdb.org/t/p/original\";\n\nclass App extends React.Component {\n  state = {\n    movieGallery: [],\n    genres: [],\n  };\n\n  componentDidMount() {\n    axios\n      .get(`${url}${popular}${api_key}`)\n      .then((suc) => {\n        this.setState({\n          movieGallery: suc.data,\n        });\n      })\n      .catch((err) => console.error(err));\n\n    axios\n      .get(\n        \"https://api.themoviedb.org/3/genre/movie/list?api_key=24b5809ca6dc4a670e6e033f96229227&language=en-US\"\n      )\n      .then((suc) => {\n        this.setState({ genres: suc.data.genres });\n      })\n      .catch((err) => console.error(err));\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <Navbar />\n        <div className=\"main\">\n          <Switch>\n            <Route\n              path=\"/player/:id\"\n              render={(routerProps) => (\n                <VideoPlayer\n                  movieGallery={this.state.movieGallery}\n                  {...routerProps}\n                />\n              )}\n            />\n\n            <Route path=\"/\" exact>\n              <Gallery\n                list={this.state.movieGallery}\n                genres={this.state.genres}\n              />\n            </Route>\n            <Route path=\"/info/:id\" render={(routerProps) => (\n              <Info movieGallery={this.state.movieGallery} genres={this.state.genres} {...routerProps}/>\n            )}>\n              \n            </Route>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}