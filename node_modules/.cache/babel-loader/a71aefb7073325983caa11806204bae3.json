{"ast":null,"code":"var _jsxFileName = \"/Users/oliverlevy/projects/partyflix/src/components/Info.jsx\";\nimport React from \"react\";\nimport \"./Info.scss\";\nimport { Link } from \"react-router-dom\";\nimport backbtn from \"../assets/icons/Icon-back-arrow.svg\";\nconst posterLarge = \"http://image.tmdb.org/t/p/original\";\nexport default function Info(props) {\n  if (props.movieGallery.results === undefined || props.genres.length === 0) {\n    return /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 12\n      }\n    }, \"loading...\");\n  } else {\n    console.log(props.genres);\n    const pageId = props.match.params.id;\n    const list = props.movieGallery.results;\n    const output = list.filter(item => item.id == pageId);\n    const movie = output[0];\n    console.log(movie);\n    const allGenres = props.genres;\n    const currentGenres = movie.genre_ids;\n    const movieGenres = currentGenres.map(item => {\n      let output = allGenres.filter(genre => genre.id === item);\n      return /*#__PURE__*/React.createElement(\"p\", {\n        key: output[0].id,\n        className: \"info__genres\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }, output[0].name);\n    });\n    console.log(movieGenres);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      className: \"info__link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: backbtn,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"info__title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, movie.title)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info__text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, \"Genres\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info__genres-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, movieGenres), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, \"Overview\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info__overview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, movie.overview)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info__release-date-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"info__release-date-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, \"Release Date\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"info__release-date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, movie.release_date)), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, \"Ratings\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info__ratings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, movie.vote_average, \"/10\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, movie.vote_count, \" people reviewed this\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gallery__btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, \"ADD TO WATCHLIST\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info__img-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"info__img\",\n      src: `${posterLarge}${movie.backdrop_path}`,\n      alt: \"movie poster\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }))));\n  }\n}","map":{"version":3,"sources":["/Users/oliverlevy/projects/partyflix/src/components/Info.jsx"],"names":["React","Link","posterLarge","Info","props","movieGallery","results","undefined","genres","length","console","log","pageId","match","params","id","list","output","filter","item","movie","allGenres","currentGenres","genre_ids","movieGenres","map","genre","name","backbtn","title","overview","release_date","vote_average","vote_count","backdrop_path"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./Info.scss\";\nimport { Link } from \"react-router-dom\";\nimport backbtn from \"../assets/icons/Icon-back-arrow.svg\";\n\nconst posterLarge = \"http://image.tmdb.org/t/p/original\";\n\nexport default function Info(props) {\n  if (props.movieGallery.results === undefined || props.genres.length === 0) {\n    return <h3>loading...</h3>;\n  } else {\n    console.log(props.genres);\n    const pageId = props.match.params.id;\n    const list = props.movieGallery.results;\n    const output = list.filter((item) => item.id == pageId);\n    const movie = output[0];\n    console.log(movie);\n    const allGenres = props.genres;\n    const currentGenres = movie.genre_ids;\n\n    const movieGenres = currentGenres.map((item) => {\n      let output = allGenres.filter((genre) => genre.id === item);\n      return (\n        <p key={output[0].id} className=\"info__genres\">\n          {output[0].name}\n        </p>\n      );\n    });\n\n    console.log(movieGenres);\n    return (\n      <div>\n        <Link to=\"/\" className='info__link'>\n          <img src={backbtn} alt=\"\" />\n          <h1 className=\"info__title\">{movie.title}</h1>\n        </Link>\n        <div className=\"info\">\n          <div className=\"info__text\">\n          <h4>Genres</h4>\n            <div className=\"info__genres-container\">\n              \n              {movieGenres}\n            </div>\n            <h4>Overview</h4>\n            <div className=\"info__overview\">\n              \n              <p>{movie.overview}</p>\n            </div>\n            <div className=\"info__release-date-container\">\n              <h4 className=\"info__release-date-header\">Release Date</h4>\n              <p className=\"info__release-date\">{movie.release_date}</p>\n            </div>\n            <h4>Ratings</h4>\n            <div className='info__ratings'>\n            <p>{movie.vote_average}/10</p>\n            <p>{movie.vote_count} people reviewed this</p>\n            </div>\n            <div className=\"gallery__btn\">\n              <h4>ADD TO WATCHLIST</h4>\n            </div>\n          </div>\n          <div className=\"info__img-container\">\n            <img\n              className=\"info__img\"\n              src={`${posterLarge}${movie.backdrop_path}`}\n              alt=\"movie poster\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}