{"ast":null,"code":"import React from\"react\";import\"./Info.scss\";import{Link}from\"react-router-dom\";import playbtn from\"../assets/icons/Icon-play.svg\";import infobtn from\"../assets/icons/Icon-info.svg\";import backbtn from\"../assets/icons/Icon-back-arrow.svg\";var posterLarge=\"http://image.tmdb.org/t/p/original\";export default function Info(props){if(props.movieGallery.results===undefined||props.genres.length===0){return/*#__PURE__*/React.createElement(\"h3\",null,\"loading...\");}else{console.log(props.genres);var pageId=props.match.params.id;var list=props.movieGallery.results;var output=list.filter(function(item){return item.id==pageId;});var movie=output[0];console.log(movie);var allGenres=props.genres;var currentGenres=movie.genre_ids;var movieGenres=currentGenres.map(function(item){var output=allGenres.filter(function(genre){return genre.id===item;});return/*#__PURE__*/React.createElement(\"p\",{key:output[0].id,className:\"info__genres\"},output[0].name);});console.log(movieGenres);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Link,{to:\"/\",className:\"info__link\"},/*#__PURE__*/React.createElement(\"img\",{src:backbtn,alt:\"\"}),/*#__PURE__*/React.createElement(\"h1\",{className:\"info__title\"},movie.title)),/*#__PURE__*/React.createElement(\"div\",{className:\"info\"},/*#__PURE__*/React.createElement(\"div\",{className:\"info__text\"},/*#__PURE__*/React.createElement(\"h4\",null,\"Genres\"),/*#__PURE__*/React.createElement(\"div\",{className:\"info__genres-container\"},movieGenres),/*#__PURE__*/React.createElement(\"h4\",null,\"Overview\"),/*#__PURE__*/React.createElement(\"div\",{className:\"info__overview\"},/*#__PURE__*/React.createElement(\"p\",null,movie.overview)),/*#__PURE__*/React.createElement(\"div\",{className:\"info__release-date-container\"},/*#__PURE__*/React.createElement(\"h4\",{className:\"info__release-date-header\"},\"Release Date\"),/*#__PURE__*/React.createElement(\"p\",{className:\"info__release-date\"},movie.release_date)),/*#__PURE__*/React.createElement(\"h4\",null,\"Ratings\"),/*#__PURE__*/React.createElement(\"div\",{className:\"info__ratings\"},/*#__PURE__*/React.createElement(\"p\",null,movie.vote_average,\"/10\"),/*#__PURE__*/React.createElement(\"p\",null,movie.vote_count,\" people reviewed this\")),/*#__PURE__*/React.createElement(\"div\",{className:\"gallery__btn\"},/*#__PURE__*/React.createElement(\"h4\",null,\"ADD TO WATCHLIST\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"info__img-container\"},/*#__PURE__*/React.createElement(\"img\",{className:\"info__img\",src:\"\".concat(posterLarge).concat(movie.backdrop_path),alt:\"movie poster\"}))));}}","map":{"version":3,"sources":["/Users/oliverlevy/projects/partyflix/src/components/Info.jsx"],"names":["React","Link","posterLarge","Info","props","movieGallery","results","undefined","genres","length","console","log","pageId","match","params","id","list","output","filter","item","movie","allGenres","currentGenres","genre_ids","movieGenres","map","genre","name","backbtn","title","overview","release_date","vote_average","vote_count","backdrop_path"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,aAAP,CACA,OAASC,IAAT,KAAqB,kBAArB,C,+JAKA,GAAMC,CAAAA,WAAW,CAAG,oCAApB,CAEA,cAAe,SAASC,CAAAA,IAAT,CAAcC,KAAd,CAAqB,CAClC,GAAIA,KAAK,CAACC,YAAN,CAAmBC,OAAnB,GAA+BC,SAA/B,EAA4CH,KAAK,CAACI,MAAN,CAAaC,MAAb,GAAwB,CAAxE,CAA2E,CACzE,mBAAO,2CAAP,CACD,CAFD,IAEO,CACLC,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACI,MAAlB,EACA,GAAMI,CAAAA,MAAM,CAAGR,KAAK,CAACS,KAAN,CAAYC,MAAZ,CAAmBC,EAAlC,CACA,GAAMC,CAAAA,IAAI,CAAGZ,KAAK,CAACC,YAAN,CAAmBC,OAAhC,CACA,GAAMW,CAAAA,MAAM,CAAGD,IAAI,CAACE,MAAL,CAAY,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACJ,EAAL,EAAWH,MAArB,EAAZ,CAAf,CACA,GAAMQ,CAAAA,KAAK,CAAGH,MAAM,CAAC,CAAD,CAApB,CACAP,OAAO,CAACC,GAAR,CAAYS,KAAZ,EACA,GAAMC,CAAAA,SAAS,CAAGjB,KAAK,CAACI,MAAxB,CACA,GAAMc,CAAAA,aAAa,CAAGF,KAAK,CAACG,SAA5B,CAEA,GAAMC,CAAAA,WAAW,CAAGF,aAAa,CAACG,GAAd,CAAkB,SAACN,IAAD,CAAU,CAC9C,GAAIF,CAAAA,MAAM,CAAGI,SAAS,CAACH,MAAV,CAAiB,SAACQ,KAAD,QAAWA,CAAAA,KAAK,CAACX,EAAN,GAAaI,IAAxB,EAAjB,CAAb,CACA,mBACE,yBAAG,GAAG,CAAEF,MAAM,CAAC,CAAD,CAAN,CAAUF,EAAlB,CAAsB,SAAS,CAAC,cAAhC,EACGE,MAAM,CAAC,CAAD,CAAN,CAAUU,IADb,CADF,CAKD,CAPmB,CAApB,CASAjB,OAAO,CAACC,GAAR,CAAYa,WAAZ,EACA,mBACE,4CACE,oBAAC,IAAD,EAAM,EAAE,CAAC,GAAT,CAAa,SAAS,CAAC,YAAvB,eACE,2BAAK,GAAG,CAAEI,OAAV,CAAmB,GAAG,CAAC,EAAvB,EADF,cAEE,0BAAI,SAAS,CAAC,aAAd,EAA6BR,KAAK,CAACS,KAAnC,CAFF,CADF,cAKE,2BAAK,SAAS,CAAC,MAAf,eACE,2BAAK,SAAS,CAAC,YAAf,eACA,uCADA,cAEE,2BAAK,SAAS,CAAC,wBAAf,EAEGL,WAFH,CAFF,cAME,yCANF,cAOE,2BAAK,SAAS,CAAC,gBAAf,eAEE,6BAAIJ,KAAK,CAACU,QAAV,CAFF,CAPF,cAWE,2BAAK,SAAS,CAAC,8BAAf,eACE,0BAAI,SAAS,CAAC,2BAAd,iBADF,cAEE,yBAAG,SAAS,CAAC,oBAAb,EAAmCV,KAAK,CAACW,YAAzC,CAFF,CAXF,cAeE,wCAfF,cAgBE,2BAAK,SAAS,CAAC,eAAf,eACA,6BAAIX,KAAK,CAACY,YAAV,OADA,cAEA,6BAAIZ,KAAK,CAACa,UAAV,yBAFA,CAhBF,cAoBE,2BAAK,SAAS,CAAC,cAAf,eACE,iDADF,CApBF,CADF,cAyBE,2BAAK,SAAS,CAAC,qBAAf,eACE,2BACE,SAAS,CAAC,WADZ,CAEE,GAAG,WAAK/B,WAAL,SAAmBkB,KAAK,CAACc,aAAzB,CAFL,CAGE,GAAG,CAAC,cAHN,EADF,CAzBF,CALF,CADF,CAyCD,CACF","sourcesContent":["import React from \"react\";\nimport \"./Info.scss\";\nimport { Link } from \"react-router-dom\";\nimport playbtn from \"../assets/icons/Icon-play.svg\";\nimport infobtn from \"../assets/icons/Icon-info.svg\";\nimport backbtn from \"../assets/icons/Icon-back-arrow.svg\";\n\nconst posterLarge = \"http://image.tmdb.org/t/p/original\";\n\nexport default function Info(props) {\n  if (props.movieGallery.results === undefined || props.genres.length === 0) {\n    return <h3>loading...</h3>;\n  } else {\n    console.log(props.genres);\n    const pageId = props.match.params.id;\n    const list = props.movieGallery.results;\n    const output = list.filter((item) => item.id == pageId);\n    const movie = output[0];\n    console.log(movie);\n    const allGenres = props.genres;\n    const currentGenres = movie.genre_ids;\n\n    const movieGenres = currentGenres.map((item) => {\n      let output = allGenres.filter((genre) => genre.id === item);\n      return (\n        <p key={output[0].id} className=\"info__genres\">\n          {output[0].name}\n        </p>\n      );\n    });\n\n    console.log(movieGenres);\n    return (\n      <div>\n        <Link to=\"/\" className='info__link'>\n          <img src={backbtn} alt=\"\" />\n          <h1 className=\"info__title\">{movie.title}</h1>\n        </Link>\n        <div className=\"info\">\n          <div className=\"info__text\">\n          <h4>Genres</h4>\n            <div className=\"info__genres-container\">\n              \n              {movieGenres}\n            </div>\n            <h4>Overview</h4>\n            <div className=\"info__overview\">\n              \n              <p>{movie.overview}</p>\n            </div>\n            <div className=\"info__release-date-container\">\n              <h4 className=\"info__release-date-header\">Release Date</h4>\n              <p className=\"info__release-date\">{movie.release_date}</p>\n            </div>\n            <h4>Ratings</h4>\n            <div className='info__ratings'>\n            <p>{movie.vote_average}/10</p>\n            <p>{movie.vote_count} people reviewed this</p>\n            </div>\n            <div className=\"gallery__btn\">\n              <h4>ADD TO WATCHLIST</h4>\n            </div>\n          </div>\n          <div className=\"info__img-container\">\n            <img\n              className=\"info__img\"\n              src={`${posterLarge}${movie.backdrop_path}`}\n              alt=\"movie poster\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}